{"version":3,"sources":["components/ContactForm/Contactform.module.css","components/App.module.css","components/ContactList/ContactList.js","components/ContactForm/Contactform.js","components/Filter/Filter.js","components/App.js","index.js"],"names":["module","exports","ContactList","items","onDelete","length","map","name","id","number","key","type","onClick","Contactform","state","handleChange","target","setState","value","handleSubmit","e","preventDefault","props","onAddItem","clearState","this","onSubmit","placeholder","onChange","className","styles","button","Component","Filter","onSetFilter","loginInputId","shortid","App","contacts","filter","filterContacts","contact","toLowerCase","includes","setFilter","addItem","item","every","toLocaleLowerCase","itemToAdd","alert","deleteItem","storage","localStorage","getItem","JSON","parse","prevProps","prevState","setItem","stringify","filtratedContacts","container","ReactDOM","render","document","querySelector"],"mappings":"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","file":"static/js/main.7e5a4d16.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"Contactform_button__1uzU8\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"App_container__4MSJx\"};","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\n\r\nconst ContactList = ({ items, onDelete }) => {\r\n  return (\r\n    items.length > 0 && (\r\n      <ul>\r\n        {items.map(({ name, id, number }) => {\r\n          return (\r\n            <li key={id} >\r\n              <span>\r\n                {name} {number}\r\n              </span>\r\n              <button\r\n                \r\n                type=\"button\"\r\n                onClick={() => onDelete(id)}\r\n              >\r\n                Delete\r\n              </button>\r\n            </li>\r\n          );\r\n        })}\r\n      </ul>\r\n    )\r\n  );\r\n};\r\nContactList.propTypes = {\r\n  items: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      name: PropTypes.string.isRequired,\r\n      id: PropTypes.string.isRequired,\r\n      number: PropTypes.string.isRequired,\r\n    }),\r\n  ).isRequired,\r\n  onDelete: PropTypes.func.isRequired,\r\n};\r\nexport default ContactList;","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport styles from './Contactform.module.css';\r\n\r\nclass Contactform extends Component {\r\n  static propTypes = {\r\n    onAddItem: PropTypes.func.isRequired,\r\n  };\r\n\r\n  state = {\r\n    name: '',\r\n    number: '',\r\n  };\r\n\r\n  handleChange = ({ target }) => {\r\n    this.setState({\r\n      [target.name]: target.value,\r\n    });\r\n  };\r\n\r\n  handleSubmit = e => {\r\n    e.preventDefault();\r\n    if (this.state.name && this.state.number) {\r\n      this.props.onAddItem({ ...this.state });\r\n    }\r\n    this.clearState();\r\n  };\r\n\r\n  clearState = () => {\r\n    this.setState({\r\n      name: '',\r\n      number: '',\r\n    });\r\n  };\r\n\r\n  render() {\r\n    const { name, number } = this.state;\r\n    return (\r\n      <form onSubmit={this.handleSubmit}>\r\n        <input\r\n          type=\"text\"\r\n          name=\"name\"\r\n          placeholder=\"Введите имя\"\r\n          onChange={this.handleChange}\r\n          value={name}\r\n        />\r\n        <input\r\n          type=\"text\"\r\n          name=\"number\"\r\n          placeholder=\"Введите номер\"\r\n          onChange={this.handleChange}\r\n          value={number}\r\n        />\r\n        <button type=\"submit\" className={styles.button}>\r\n          Add contact\r\n        </button>\r\n      </form>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Contactform;","import React from 'react';\r\nimport shortid from 'shortid';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst Filter = ({ value, onSetFilter }) => {\r\n  const loginInputId = shortid();\r\n\r\n  return (\r\n    <form>\r\n      <h3>Find contact by name</h3>\r\n      <input\r\n        onChange={onSetFilter}\r\n        type=\"text\"\r\n        name=\"filter\"\r\n        id={loginInputId}\r\n        placeholder=\"Поиск контакта по имени\"\r\n        value={value}\r\n      />\r\n    </form>\r\n  );\r\n};\r\nFilter.propTypes = {\r\n  value: PropTypes.string.isRequired,\r\n  onSetFilter: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default Filter;","import React, { Component } from 'react';\r\nimport shortid from 'shortid';\r\nimport ContactList from './ContactList/ContactList';\r\nimport ContactForm from './ContactForm/Contactform';\r\nimport Filter from './Filter/Filter';\r\nimport styles from './App.module.css';\r\n\r\nclass App extends Component {\r\n  state = {\r\n    contacts: [\r\n      { id: 'id-1', name: 'Rosie Simpson', number: '459-12-56' },\r\n      { id: 'id-2', name: 'Hermione Kline', number: '443-89-12' },\r\n      { id: 'id-3', name: 'Eden Clements', number: '645-17-79' },\r\n      { id: 'id-4', name: 'Annie Copeland', number: '227-91-26' },\r\n    ],\r\n    filter: '',\r\n  };\r\n\r\n  componentDidMount() {\r\n    const storage = localStorage.getItem('contacts');\r\n    if (storage !== null) {\r\n      this.setState({ contacts: JSON.parse(storage) });\r\n    }\r\n  }\r\n  \r\n  componentDidUpdate(prevProps, prevState) {\r\n    const { contacts } = this.state;\r\n    if (prevState.contacts !== contacts) {\r\n      localStorage.setItem('contacts', JSON.stringify(contacts));\r\n    }\r\n  }\r\n\r\n  filterContacts = (contacts, filter) => {\r\n    return contacts.filter(contact =>\r\n      contact.name.toLowerCase().includes(filter.toLowerCase()),\r\n    );\r\n  };\r\n\r\n  setFilter = ({ target }) => {\r\n    this.setState({\r\n      filter: target.value,\r\n    });\r\n  };\r\n\r\n  \r\n\r\n  addItem = item => {\r\n    if (\r\n      this.state.contacts.every(\r\n        contact =>\r\n          contact.name.toLocaleLowerCase() !== item.name.toLocaleLowerCase(),\r\n      )\r\n    ) {\r\n      const itemToAdd = { ...item, id: shortid() };\r\n      this.setState(state => ({\r\n        contacts: [...state.contacts, itemToAdd],\r\n      }));\r\n    } else {\r\n      alert(`${item.name} is already in contacts!`);\r\n    }\r\n  };\r\n\r\n  deleteItem = id => {\r\n    this.setState(state => ({\r\n      contacts: state.contacts.filter(contact => contact.id !== id),\r\n    }));\r\n  };\r\n\r\n  render() {\r\n    const { contacts, filter } = this.state;\r\n    const filtratedContacts = this.filterContacts(contacts, filter);\r\n    return (\r\n      <div className={styles.container}>\r\n        <h1>Phonebook</h1>\r\n        <ContactForm onAddItem={this.addItem} />\r\n        <h2>Contacts</h2>\r\n        <Filter onSetFilter={this.setFilter} value={this.state.filter} />\r\n        <ContactList items={filtratedContacts} onDelete={this.deleteItem} />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App';\n\n\nReactDOM.render(<App />, document.querySelector('#root'));\n"],"sourceRoot":""}